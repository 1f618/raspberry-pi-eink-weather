---
- hosts: all
  vars:
    pip_install_packages:
      - name: adafruit-circuitpython-epd
    eink_project_name: EInk_Bonnet_Weather_Station
    eink_dir: "/home/pi/{{ eink_project_name }}"
    open_weather_token: "{{ lookup('env', 'OPEN_WEATHER_TOKEN') }}"
    location: "Chicago, US"

  pre_tasks:
    - name: Check for OPEN_WEATHER_TOKEN environment variable
      fail:
        msg: "Your OPEN_WEATHER_TOKEN is not set.  Set it using 'OPEN_WEATHER_TOKEN=yourtokenhere'."
      when: open_weather_token is not regex('^[a-f0-9]{32}$')

    - name: Announce settings
      debug:
        msg: > 
          "open_weather_token is '{{ open_weather_token }}'"
          "location is '{{ location }}'"

  roles:
    - 1f618.circuitpython_on_linux

  tasks:
    - name: "apt update, apt upgrade"
      # https://stackoverflow.com/a/41537418
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400  # One day
      become: yes

    # https://learn.adafruit.com/raspberry-pi-e-ink-weather-station-using-python/python-setup

    - name: Install a list of packages
      ansible.builtin.apt:
        pkg:
        - fonts-dejavu
        - python3-pil
      become: yes

    - name: "Create {{ eink_dir }} directory"
      ansible.builtin.file:
        path: "{{ eink_dir }}"
        state: directory

    - name: "Download {{ eink_project_name }} project files"
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ eink_dir }}/{{ item.name }}"
      with_items:
        - name: meteocons.ttf
          url: https://github.com/adafruit/Adafruit_Learning_System_Guides/raw/main/EInk_Bonnet_Weather_Station/meteocons.ttf
        - name: code.py
          url: https://raw.githubusercontent.com/adafruit/Adafruit_Learning_System_Guides/main/EInk_Bonnet_Weather_Station/code.py
        - name: weather_graphics.py
          url: https://raw.githubusercontent.com/adafruit/Adafruit_Learning_System_Guides/main/EInk_Bonnet_Weather_Station/weather_graphics.py

    - name: Replace OPEN_WEATHER_TOKEN and LOCATION in code.py
      ansible.builtin.lineinfile:
        path: "{{ eink_dir }}/code.py"
        regexp: "^{{ item.var_name }} ="
        line: "{{ item.var_name }} = \"{{ item.var_val }}\""
      with_items:
        - var_name: OPEN_WEATHER_TOKEN
          var_val: "{{ open_weather_token }}"
        - var_name: LOCATION
          var_val: "{{ location }}"  
